# -*- coding: utf-8 -*-
"""Project_CC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jjcHyLyC8Hw2p6xSeFsE1OLKuVFOvlEg

**Project: News Aggregator with Sentiment Analysis**
"""

!pip install textblob
!pip install streamlit -q

import requests
import pandas as pd
import matplotlib.pyplot as plt
from textblob import TextBlob
import streamlit as st

# Put your key here instead of the text between the quotes
api_key = "ea3002d132c0464584758ed1aa2c0478"
country = "us"      # You can change to "eg", "sa", "gb", etc.
category = "technology"  # Change to: health, sports, business, etc.


# News Fetch Link (Technology News from America)
url = f"https://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey={api_key}"

response = requests.get(url)
articles = response.json().get('articles', [])

results = []
for article in articles:
    title = article.get('title')
    if title:
        polarity = TextBlob(title).sentiment.polarity
        if polarity > 0:
            sentiment = "Positive"
        elif polarity < 0:
            sentiment = "Negative"
        else:
            sentiment = "Neutral"
        results.append([title, sentiment])

# Create DataFrame
sentiment_df = pd.DataFrame(results, columns=["News Title", "Sentiment"])

# Count sentiment values
sentiment_counts = sentiment_df["Sentiment"].value_counts()

# Pie Chart
fig, ax = plt.subplots(figsize=(5, 5))
colors = ['green', 'red', 'gray']
ax.pie(sentiment_counts, labels=sentiment_counts.index, autopct='%1.1f%%', colors=colors)
ax.set_title("Sentiment Distribution in News Headlines")
plt.tight_layout()

st.title("ðŸ“° News Sentiment Analysis App")
st.markdown(f"### {category.capitalize()} News from {country.upper()}")

st.dataframe(sentiment_df)

st.markdown("### Sentiment Distribution")
st.pyplot(fig)

sentiment_df.to_csv("news_sentiment_results.csv", index=False)

st.success("News analyzed and results saved!")

